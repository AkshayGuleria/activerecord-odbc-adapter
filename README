= OpenLink ODBC Data Adapter for Ruby on Rails

(C) 2006 OpenLink Software

22-November-2006


== Status

The adapter accompanying this note is a Generic ODBC Adapter for Ruby on Rails
being developed by <B>OpenLink&nbsp;Software</B>[http://www.openlinksw.com].

The aim of this development is to provide a single ODBC-based adapter
capable of supporting the most popular DBMSes, in contrast to the
current approach in the Rails community of each database requiring
its own adapter.

The adapter is a work in progress.

It currently supports Ingres r3, Informix 9.3 or later, Oracle 10g,
MySQL 5 and OpenLink's Virtuoso
(Open&nbsp;Source&nbsp;Edition[http://virtuoso.openlinksw.com]), 
SQL Server 2000, Sybase ASE 15, DB2 v9 and Progress v8/9/10

Testing to date has been limited to the ROR 'Expenses' sample
application described at http://developer.apple.com/tools/rubyonrails.html
and the ActiveRecord test modules base_test.rb and migration_test.rb.

Testing has been performed on Linux, Windows and Mac OS X using
OpenLink's own ODBC drivers and the native Virtuoso ODBC client.


== Pre-Requisites

The OpenLink ODBC Adapter for Ruby on Rails needs the
ActiveRecord[http://wiki.rubyonrails.com/rails/pages/ActiveRecord]
package installed.

The Adapter also requires Christian Werner's
Ruby&nbsp;ODBC&nbsp;Bridge[http://www.ch-werner.de/rubyodbc]
(release 0.9991 or later), to bridge to an underlying ODBC driver.


== Contents

In the accompanying sources, the lib directory structure is equivalent
to the lib directory located under ACTIVE_RECORD_ROOT in your main
Ruby tree.

On Windows ACTIVE_RECORD_ROOT will be something like:

    c:\ruby\lib\ruby\gems\1.8\gems\activerecord-x.y.z

On Unix and Mac OS X ACTIVE_RECORD_ROOT will be something like:

    /usr/lib/ruby/gems/1.8/gems/activerecord-x.y.z
or
    /usr/local/lib/ruby/gems/1.8/gems/activerecord-x.y.z

On Mac OS X using Locomotive ACTIVE_RECORD_ROOT will be
something like:

    /Applications/Locomotive2/bundles/rails112.locobundle/i386/lib/ruby/gems/1.8/gems/activerecord-x.y.z

lib/ contains the files which constitute the new ODBC adapter.

test/ contains the fixture definitions for testing the adapter.

support/odbc_rails.diff contains some patches to ActiveRecord.

These will be submitted to the ActiveRecord source maintainer in
due course, if we request that the OpenLink ODBC Adapter for Ruby
on Rails be added to the ActiveRecord source distribution to accompany
the existing Rails adapters.

Only one patch in this diff file is really necessary - that to

    lib/active_record/connection_adapters/abstract/schema_definitions.rb

This fixes what appears to be a bug in Active Record.

The patches to base_test.rb and migration_test.rb are not essential.
However, they modify or bypass certain tests to cope with limitations
of particular databases. Other developers have previously modified
the tests similarly to cope with limitations of other Rails-supported
databases. modified_files/ contains the patched versions of the
files touched by the diff file.

== Installation as a Gem

* Install the odbc-rails gem.

    # gem install -r odbc-rails

* Add the ODBC adapter to the list of adapters recognized by ActiveRecord.

  1. Edit ACTIVE_RECORD_ROOT/lib/active_record.rb
      (where, on Windows, ACTIVE_RECORD_ROOT will be something like
      c:\ruby\lib\ruby\gems\1.8\gems\activerecord-x.x.x)

  2. Edit the line:

        RAILS_CONNECTION_ADAPTERS = %w( mysql postgresql sqlite firebird sqlserver db2 oracle sybase openbase)

     to include odbc as an adapter, i.e.

        RAILS_CONNECTION_ADAPTERS = %w( mysql postgresql ... openbase odbc)


== Installation as a Plugin

The OpenLink ODBC Data Adapter can be installed as a plugin by navigating to
the root of your Rails application and typing:
    script/plugin install odbc-rails
or
    script/plugin install http://odbc-rails.rubyforge.org/plugins/odbc-rails
On Windows, replace <tt>script/plugin</tt> by <tt>ruby script/plugin</tt>.
e.g. <tt>ruby script/plugin install odbc-rails</tt>


=== Manual Plugin Installation

You can also install the plugin manually by unpacking the sources into the
vendor/plugins directory of your Rails application. If you use this method,
you must run install.rb immediately afterwards. This need only be done once.

install.rb modifies your application's config/environment.rb file, adding a
line to ensure that the database adapter plugin is initialized before
ActiveRecord. i.e.

    require File.join(File.dirname(__FILE__), 'boot')

    # Added by OpenLink ODBC Adapter (odbc-rails) plugin
    Rails::Initializer.run(:load_plugins)

    Rails::Initializer.run do |config|

Without this change, Rails attempts to initialize ActiveRecord before it loads 
any plugins, causing an AdapterNotFound error. install.rb saves a copy of 
environment.rb before making any changes.

== Installation into your Rails Core

Installing the adapter as a plugin makes it available to a particular Rails
application. If you would prefer to make the adapter accessible to all your
Rails applications, you can instead install it centrally in your Rails 'core'
by incorporating the adapter files into your ActiveRecord source tree. This 
can be done in various ways.

When using <tt>rake install</tt> or running the install_odbc.rb
script by hand, the script tries to determine the location of the
activerecord package within your Ruby installation and allows you
to overrule the directory it has found with a directory of your
choice. If more than one version of activerecord is found, the
default will be the latest version.

On Mac OS X the installation script is also capable of locating
Locomotive and will ask to install in there.

The install_odbc.rb script also verifies that the pre-requisites
are installed.

If all else fails this document also describes the steps to install
the ODBC adapter into activerecord manually.


=== Using rake

The simplest way to install the adapter is by using the following
command as root:

    # rake install

or if your system supports sudo:

    $ sudo rake install


The Rakefile also defines some targets specifically for developers:

    $ rake rdoc         # Generate rdoc documentation in ~/doc

    $ rake package	# Create distribution package in ~/distrib

    $ rake clean	# Remove generated files and directories


=== Running installation script

The second way of installing the adapter is running the
<tt>install_odbc.rb</tt> script as root.

    # ruby install_odbc.rb

or if your system supports sudo:

    $ sudo ruby install_odbc.rb


=== Installing files manually

The third way of installing the adapter is by performing the
installation steps yourself.

* Add the ODBC adapter to the list of adapters recognized by ActiveRecord.

  1. Edit ACTIVE_RECORD_ROOT/lib/active_record.rb
      (where, on Windows, ACTIVE_RECORD_ROOT will be something like
      c:\ruby\lib\ruby\gems\1.8\gems\activerecord-x.x.x)

  2. Edit the line:

        RAILS_CONNECTION_ADAPTERS = %w( mysql postgresql sqlite firebird sqlserver db2 oracle sybase openbase)

     to include odbc as an adapter, i.e.

        RAILS_CONNECTION_ADAPTERS = %w( mysql postgresql ... openbase odbc)

* Copy odbc_adapter.rb to the ACTIVE_RECORD_ROOT/lib/active_record/connection_adapters/ directory

* Copy the odbcext_*.rb files to the ACTIVE_RECORD_ROOT/lib/active_record/vendor/ directory


== Configuring the Adapter

Examples of the required connection parameters can be found in

   test/connections/native_odbc/connection.rb

If you enable call-tracing by setting :trace => true,  specify the
logger output file as illustrated in connection.rb, e.g.

    ActiveRecord::Base.logger = Logger.new("debug_odbc.log")


== License

The OpenLink ODBC Adapter for Ruby on Rails is released under the
MIT license (see the file COPYING).


=== Submitting fixes and enhancements

Patches and new contributions can be submitted as diffs from the
current CVS archive by:

    $ cvs add newfiles

    $ cvs -z3 diff -uN > diffs

Patches and  contributions can be send to the OpenLink iODBC source
archive mainainter at mailto:iodbc@openlinksw.com to be included
in the next distribution. Please provide accompanying documentation
on which bugs are fixed or new features are introduced.
